\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{main}

% Markup
%% Miscellaneous
\newif\iflinuxfirst\linuxfirsttrue
\def\Linux{%                                       % A shorthand for GNU/Linux
  \iflinuxfirst
    \acroshort{GNU}/Linux (Linux)%
    \linuxfirstfalse
  \else
    Linux%
  \fi\acroindex[!Linux]{GNU}}
\def\foreign[#1]#2{\begin{#1}\textit{#2}\end{#1}}  % A foreign text
\usepackage{xcolor}
\def\needscite{\textcolor{red}{[citation needed]}} % [Citation needed] reminder
\def\hexa#1{%                                      % A hexadecimal number
  {\let\ea\expandafter%
  \mbox{\ea\ea\ea\@gobble\hexapair#1\relax\relax\relax}}%
  \ifhexafirst\ in the hexadecimal notation\hexafirstfalse\fi}
\newif\ifhexafirst\hexafirsttrue                   %% Tracks the first usage
\def\hexapair#1#2{%                                %% Formats a hexa pair
  \ifx#1\relax\else%
    \,\texttt{\MakeUppercase{#1#2}}\expandafter\hexapair%
  \fi}
\newcommand{\ucs}[2][]{{%                          % Prints the description of
  \scshape\MakeLowercase{#2}}%                     %% a UCS character
  \if\relax#1\relax\else~(\hexa{#1})\fi}           %% #1 -- hexa, #2 -- name
\def\scamp{{\footnotesize\&}}                      % A fake small-caps ampersand
\def\footnote#1{\marginpar{\small\raggedright#1}}  % Margin footnotes
\def\filename#1{ (\texttt{#1})}                    % Filenames in captions
\DeclareRobustCommand{\work}{\@ifstar\work@\work@@}
\def\work@#1{\textit{#1}}                          % Names of written works
\def\work@@#1{\work*{#1}\index{#1@\work*{#1}}}     %% ... without indexing
\def\inx#1{#1\index{#1}}                           % Leaky indexing
\let\person\inx                                    % Person names
\def\MakeTitlecase#1{{%                            % Turns the first character
  \def\head##1##2\relax{##1}%                      %% of #1 to the upper case
  \def\tail##1##2\relax{##2}%
  \uppercase{\head#1\relax}\tail#1\relax}}
\let\identifier\texttt                   % A general ASCII identifier
\def\Identifier#1{%                      %% ... at the beginning of a sentence
  \identifier{\MakeTitlecase{#1}}}
\DeclareRobustCommand%                % The name of a CLI utility (`\cliutil*`)
  {\cliutil}{\@ifstar\identifier\cliutil@}
\def\cliutil@#1{%                     %% ... with indexing         (`\cliutil`)
  \cliutil*{#1}\index{#1@\cliutil*{#1}}}
\DeclareRobustCommand%      %% ... at the beginning of a sentence (`\Cliutil*`)
  {\Cliutil}{\@ifstar\Identifier\Cliutil@}
\def\Cliutil@#1{%           %%% ... with indexing                  (`\Cliutil`)
  \Cliutil*{#1}\index{#1@\Cliutil*{#1}}}
\def\command{\cliutil*}               % A command
%% Code
\def\code@readhead:#1{%               % A helper macro that reads #1\relax and
  \if#1|%                             %% returns any tokens preceding a pipe (|)
    \ea\code@readhead@\ea:%
  \else\ifx#1\relax\else%
    #1\ea\ea\ea\code@readhead\ea\ea\ea:%
  \fi\fi}%
\def\code@readhead@:#1{%
  \ifx#1\relax\else%
    \ea\code@readhead@\ea:%
  \fi}
\def\code@readtail:#1{%              % A helper macro that reads #1\relax and
  \if#1|%                            %% returns any tokens following a pipe (|)
    \ea\code@readtail@\ea:%
  \else\ifx#1\relax\else%
    \ea\ea\ea\code@readtail\ea\ea\ea:%
  \fi\fi}
\def\code@readtail@:#1{%
  \ifx#1\relax\else%
    #1\ea\code@readtail@\ea:%
  \fi}%
\usepackage{minted}
\newcommand{\code}[2][text]{{%       % Inline code #2 in language #1, a pipe
  \let\ea\expandafter%               %% in #1 delimits implementation parameters
  \edef\head{\code@readhead:#1\relax}%
  \edef\tail{\code@readtail:#1\relax}%
  \mintinline[\tail]{\head}{#2}}}
\newcommand{\inputcode}[2][text]{{%  % Code from file #2 in language #1, a pipe
  \let\ea\expandafter%               %% in #1 delimits implementation parameters
  \edef\head{\code@readhead:#1\relax}%
  \edef\tail{\code@readtail:#1\relax}%
  \inputminted[\tail]{\head}{#2}}}
\def\element#1{\code[html]{<#1>}}        % An SGML or XML element
%% Terms
\let\termstyle\textit
\def\term{\@ifstar\term@@\term@}
\def\term@#1{\term@@{#1}\index{#1}}    % First occurances of terms (`\term`)
\def\term@@#1{\termstyle{#1}}          %% ... w/o indexing          (`\term*`)
\def\termpl{\@ifstar\termpl@@\termpl@}
\def\termpl@#1{%                       %% ... in plural              (`\termpl`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]{%                %%% {#1} -- #1 has plural spelling #1s
    \termstyle{##1}\indexoutput}%
  \def\indexoutput##1{%
    \index{##1}\endgroup}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{#1s}\index{#1}\fi}
\def\termpl@@#1{%                      %% ... in plural w/o indexing (`\termpl*`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]##2{%             %%% {#1} -- #1 has plural spelling #1s
    \termstyle{##1}\endgroup}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{#1s}\fi}
\def\Term{\@ifstar\Term@@\Term@}
\def\Term@#1{\Term@@{#1}\index{#1}}%% ... at the beginning of a sentence (`\Term`)
\def\Term@@#1{\termstyle{%         %% ... w/o indexing                  (`\Term*`)
  \MakeTitlecase{#1}}}
\def\Termpl{\@ifstar\Termpl@@\Termpl@}
\def\Termpl@#1{%                       %% ... in plural              (`\Termpl`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]{%                %%% {#1} -- #1 has plural spelling #1s
    \termstyle{\MakeTitlecase{##1}}\indexoutput}%
  \def\indexoutput##1{%
    \index{##1}\endgroup}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{\MakeTitlecase{#1s}}\index{#1}\fi}
\def\Termpl@@#1{%                      %% ... in plural w/o indexing (`\Termpl*`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]##2{%             %%% {#1} -- #1 has plural spelling #1s
    \termstyle{\MakeTitlecase{##1}}}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{\MakeTitlecase{#1s}}\fi}
%% Faking chapters and TOC entries
\def\faketoc#1{%                          % A forced TOC entry
  \addcontentsline{toc}{chapter}{#1}}
\usepackage{afterpage}
\def\fakechapter#1{%                      % An unnumbered chapter head
  \chapter*{#1}
  \markright{\MakeUppercase{#1}}
  \afterpage{\markboth{\MakeUppercase{#1}}{\MakeUppercase{#1}}}
  \faketoc{#1}}
%% Acronyms
\usepackage{acro}
\newcommand{\defacronym}[3][]{%           % An acronym definition
  \mdefacronym[#1]{#2}{#2}{#3}}  
\newcommand{\mdefacronym}[4][]{%          % A manual acronym definition
  \DeclareAcronym{#2}{%                   %%   #1: options, #2: handle
    short={\MakeLowercase{#3}},%          %%   #3: short form, #4: long form
    long={#4},long-plural-form={#4s},#1}}
% An acronym formatting macro
\def\acronym#1{\ac{#1}\acroindex{#1}}     % An acronym
\def\Acronym#1{\Ac{#1}\acroindex{#1}}     %% ... at the beginning of a sentence
\def\acrofirst#1{\acf{#1}\acroindex{#1}}  %% ... in the initial form 
\def\acropl#1{\acp{#1}\acroindex{#1}}     %% ... in the plural form 
\def\acroshort#1{\acs*{#1}\acroindex{#1}} %% ... in the unexpanded form
\def\acrolong#1{\acl{#1}\acroindex{#1}}   %% ... in the expanded form
\def\acroflat#1{\textsc{\MakeLowercase{#1}}} %% ... that wasn't defined
\newcommand{\acroindex}[2][]{%            % Puts an acronym entry into index with
  \index{#2@{\acs*{#2}}#1}}               %% #2 appended to the `\index` argument

% Design
%% No em-spaces after full stops
\frenchspacing
%% No clubs and widows
\usepackage[all]{nowidow}
%% Fonts
\usepackage{fontspec}
\usepackage{unicode-math}
\setmainfont[
  Numbers=OldStyle,
  Ligatures=TeX
]{TeX Gyre Pagella}
\setmonofont[
  Ligatures=TeX,
  Scale=MatchLowercase,
  AutoFakeSlant, % Fake the slant on the typewriter font
  BoldItalicFeatures=FakeSlant
]{Inconsolata}
%%% Set up TeX Gyre Pagella as the math font with old style digits from the
%%%% base TeX Gyre Pagella font for inline mathematics.
\setmathfont[
  math-style=ISO,
  bold-style=ISO,
  vargreek-shape=TeX
]{texgyrepagella-math.otf}
\setmathfont[
  range=\mathup/{num},
  Numbers=OldStyle
]{TeX Gyre Pagella}
\everydisplay={\setmathfont[range=\mathup/{num}]{texgyrepagella-math.otf}}
%% Protrusion
\usepackage[protrusion]{microtype}
%% Acronyms
\acsetup{
  first-long-format=\itshape,  % The formatting of an expanded acronym
  short-format=\scshape,       %%              ... an unexpanded acronym
  list-type=description,       % The type of the list used to print acronyms
  list-caps=true}              % List definitions start with upper-case letters
%% Lists
%%% No vertical spacing and indentation in lists
\usepackage{enumitem}
\setlist{noitemsep,leftmargin=0cm}
%%% Description list runs into the margin
\renewenvironment{description}{%
  \begin{itemize}
    \begingroup
    \let\olditem\item
    \renewcommand{\item}[1][]{\olditem[\textbf{##1}]}}{%
    \endgroup
  \end{itemize}}
%% Code
\setminted{breaklines=true}
\usemintedstyle{default}
%%% Line numbers
%%% @see <http://tex.stackexchange.com/a/132850/70941>
\renewcommand{\theFancyVerbLine}{{\rm\normalsize{\arabic{FancyVerbLine}}}}
%% Hypertext support
\usepackage[%
  colorlinks,
  citecolor=blue
]{hyperref}
