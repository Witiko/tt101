\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{main}

% Markup
%% Miscellaneous
\let\key\textit                                    % A keyboard key
\def\nexttable{\medskip\\}      % The vertical separator of two adjacent tables
\def\nextimage{\bigskip\\}      % The vertical separator of two adjacent images
\usepackage{menukeys}
\let\displaykey\keys                               % A displayable keyboard key
\newif\iflinuxfirst\linuxfirsttrue
\def\Linux{%                                       % A shorthand for GNU/Linux
    \acroshort{GNU}/Linux%
    \acroindex[!Linux]{GNU}}
\def\Unix{%                                        % A shorthand for Unix
  Unix and Unix-like operating system}
\def\Unices{%                                      % A shorthand for Unices
  Unix and Unix-like operating systems}
\DeclareRobustCommand{\foreign}[2][]{%             % A foreign language text
  \selectlanguage{#1}\textit{#2}%
  \PolyglossiaSetup{english}{indentfirst=false}%   %% A workaround fixing
  \selectlanguage{english}}%                       %% ...
  %% <https://github.com/reutenauer/polyglossia/issues/153>
\usepackage{xcolor}
\def\needscite{\textcolor{red}{[citation needed]}} % [Citation needed] reminder
\def\hexa#1{%                                      % A hexadecimal number
  {\let\ea\expandafter%
  \mbox{\ea\ea\ea\@gobble\hexapair#1\relax\relax\relax}}%
  \ifhexafirst\ in the hexadecimal notation\hexafirstfalse\fi}
\newif\ifhexafirst\hexafirsttrue                   %% Tracks the first usage
\def\hexapair#1#2{%                                %% Formats a hexa pair
  \ifx#1\relax\else%
    \,\texttt{\MakeUppercase{#1#2}}\expandafter\hexapair%
  \fi}
\newcommand{\ucs}[2][]{{%                          % Prints the description of
  \scshape\MakeLowercase{#2}}%                     %% a UCS character
  \if\relax#1\relax\else~(\hexa{#1})\fi}           %% #1 -- hexa, #2 -- name
\def\scamp{{\footnotesize\&}}                      % A fake small-caps ampersand
\newlength\oldbelowcaptionskip
\def\separatorcaption#1{%                          % A caption that relates to
  \setlength\oldbelowcaptionskip\belowcaptionskip  %% material both below and
  \setlength\belowcaptionskip\abovecaptionskip
  \caption{#1}\setlength\belowcaptionskip\oldbelowcaptionskip}
\usepackage{ragged2e}
\def\footnote#1{%                                  % Margin note
  \marginpar[{\footnotesize\RaggedLeft#1}]%
             {\footnotesize\RaggedRight#1}}%
\def\lmarginpar#1{{%                               % A non-floating margin note
  \footnotesize                                    %% ... in even page variant
  \smash{\llap{\parbox[t]{\marginparwidth}
  {\strut\raggedleft#1}\kern\marginparsep}}}}
\def\rmarginpar#1{{%                               %% ... in odd page variant
  \footnotesize
  \smash{\rlap{\hspace*{\dimexpr\linewidth+\marginparsep}\parbox[t]%
  {\marginparwidth}{\strut\raggedright#1}}}}}
\usepackage{changepage}
\strictpagecheck
\def\ffootnote#1{%                 % A two-side aware non-floating margin note
  \checkoddpage
  \ifoddpage
    \rmarginpar{#1}
  \else
    \lmarginpar{#1}
  \fi}
\let\filename\texttt                               % Filenames
\newcommand\filenamecap[2][]{                      % Filenames in captions
  (\filename{#2}\ifx\empty#1\empty\else, #1\fi)}
\let\tblhead\textit                                % The table heading style
\def\inx#1{#1\index{#1}}                           % Leaky indexing
\let\person\inx                                    % Person names
\def\MakeTitlecase#1{{%                            % Turns the first character
  \def\head##1##2\relax{##1}%                      %% of #1 to the upper case
  \def\tail##1##2\relax{##2}%
  \uppercase{\head#1\relax}\tail#1\relax}}
\let\identifier\texttt                   % A general ASCII identifier
\def\Identifier#1{%                      %% ... at the beginning of a sentence
  \identifier{\MakeTitlecase{#1}}}
\DeclareRobustCommand%                % The name of a CLI utility (`\cliutil*`)
  {\cliutil}{\@ifstar\identifier\cliutil@}
\def\cliutil@#1{%                     %% ... with indexing         (`\cliutil`)
  \cliutil*{#1}\index{#1@\cliutil*{#1}}}
\DeclareRobustCommand%      %% ... at the beginning of a sentence (`\Cliutil*`)
  {\Cliutil}{\@ifstar\Identifier\Cliutil@}
\def\Cliutil@#1{%           %%% ... with indexing                  (`\Cliutil`)
  \Cliutil*{#1}\index{#1@\cliutil*{#1}}}
\def\command{\cliutil*}                            % A command
%% Macros for citing works in and outside of the bibliography
\DeclareRobustCommand\work{\@ifstar\work@\work@@}  % Names of written works
\def\work@@#1{%                                    %% ... with indexing
  \work*{#1}\workindex{#1}}
\def\work@#1{\textit{#1}}                          %% ... w/o indexing
\newcommand\workindex[2][]{%
  \ifx\relax#1\relax
    \def\work@sortstring{#2}%
  \else
    \def\work@sortstring{#1}%
  \fi\workindex@{#2}}
\def\workindex@#1{%                                %% ... only indexing
  \ifx\relax\work@sortstring\relax
    \index{#1@\work*{#1}}%
  \else
    \index{\work@sortstring @\work*{#1}}%
  \fi}
\DeclareFieldFormat*{citetitle}{\work*{#1}\workindex@{#1}}
\def\citework{\@ifstar\citework@@\citework@}
\def\citework@#1{\citework*()[]{#1}}               %% ... citation format
\def\citework@@(#1)[#2]#3{%                        %%% ... fully parametrized:
  \def\work@sortstring{#1}%                        %%%% #1: sortstring
  \citetitle{#3}~\cite[#2]{#3}}%                   %%%% #2: `\cite` opt-args
                                                   %%%% #3: `\cite` id
%% Quotation macros
\def\quote#1{``\emph{{\let\emph\textbf#1}}''}      % Any emphasis in a quote
                                                   %% will be set in bold.
%% Code
\def\code@readhead:#1{%               % A helper macro that reads #1\relax and
  \if#1|%                             %% returns any tokens preceding a pipe (|)
    \ea\code@readhead@\ea:%
  \else\ifx#1\relax\else%
    #1\ea\ea\ea\code@readhead\ea\ea\ea:%
  \fi\fi}%
\def\code@readhead@:#1{%
  \ifx#1\relax\else%
    \ea\code@readhead@\ea:%
  \fi}
\def\code@readtail:#1{%              % A helper macro that reads #1\relax and
  \if#1|%                            %% returns any tokens following a pipe (|)
    \ea\code@readtail@\ea:%
  \else\ifx#1\relax\else%
    \ea\ea\ea\code@readtail\ea\ea\ea:%
  \fi\fi}
\def\code@readtail@:#1{%
  \ifx#1\relax\else%
    #1\ea\code@readtail@\ea:%
  \fi}%
\usepackage{minted}
\newcommand{\code}[2][text]{{%       % Inline code #2 in language #1, a pipe
  \let\ea\expandafter%               %% in #1 delimits implementation parameters
  \edef\head{\code@readhead:#1\relax}%
  \edef\tail{\code@readtail:#1\relax}%
  \mintinline[\tail]{\head}{#2}}}
\newcommand{\inputcode}[2][text]{{%  % Code from file #2 in language #1, a pipe
  \let\ea\expandafter                %% in #1 delimits implementation parameters
  \edef\head{\code@readhead:#1\relax}%
  \edef\tail{\code@readtail:#1\relax}%
  \inputminted[\tail]{\head}{#2}}}
\def\element#1{\code[html]{<#1>}}    % An SGML or XML element
\let\regex\code                      % A regular expression
\let\weakregex\texttt                % A regular expression w/o verbatim parsing
\def\meta#1{%                        % A metainformation within a source code
  $\langle$\textit{#1}$\rangle$}
%% Terms
\let\termstyle\textit
\def\term{\@ifstar\term@@\term@}
\def\term@#1{\term@@{#1}\index{#1}}    % First occurances of terms (`\term`)
\def\term@@#1{\termstyle{#1}}          %% ... w/o indexing          (`\term*`)
\def\termpl{\@ifstar\termpl@@\termpl@}
\def\termpl@#1{%                       %% ... in plural              (`\termpl`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]{%                %%% {#1} -- #1 has plural spelling #1s
    \termstyle{##1}\indexoutput}%
  \def\indexoutput##1{%
    \index{##1}\endgroup}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{#1s}\index{#1}\fi}
\def\termpl@@#1{%                      %% ... in plural w/o indexing (`\termpl*`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]##2{%             %%% {#1} -- #1 has plural spelling #1s
    \termstyle{##1}\endgroup}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{#1s}\fi}
\def\Term{\@ifstar\Term@@\Term@}
\def\Term@#1{\Term@@{#1}\index{#1}}%% ... at the beginning of a sentence (`\Term`)
\def\Term@@#1{\termstyle{%         %% ... w/o indexing                  (`\Term*`)
  \MakeTitlecase{#1}}}
\def\Termpl{\@ifstar\Termpl@@\Termpl@}
\def\Termpl@#1{%                       %% ... in plural              (`\Termpl`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]{%                %%% {#1} -- #1 has plural spelling #1s
    \termstyle{\MakeTitlecase{##1}}\indexoutput}%
  \def\indexoutput##1{%
    \index{##1}\endgroup}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{\MakeTitlecase{#1s}}\index{#1}\fi}
\def\Termpl@@#1{%                      %% ... in plural w/o indexing (`\Termpl*`)
  \begingroup%                         %%% [#1]{#2} -- #2 has plural spelling #1
  \def\textoutput##1]##2{%             %%% {#1} -- #1 has plural spelling #1s
    \termstyle{\MakeTitlecase{##1}}}%
  \if#1[\expandafter\textoutput\else%
  \endgroup\termstyle{\MakeTitlecase{#1s}}\fi}
%% Faking chapters and TOC entries
\def\faketoc#1{%                          % A forced TOC entry
  \addcontentsline{toc}{chapter}{#1}}
\usepackage{afterpage}
\def\fakechapter#1{%                      % An unnumbered chapter head
  \chapter*{#1}
  \markboth{\MakeUppercase{#1}}{\MakeUppercase{#1}}
  \faketoc{#1}}
%% Acronyms
\usepackage{acro}
\newcommand{\defacronym}[3][]{%           % An acronym definition
  \mdefacronym[#1]{#2}{#2}{#3}}  
\newcommand{\mdefacronym}[4][]{%          % A manual acronym definition
  \DeclareAcronym{#2}{%                   %%   #1: options, #2: handle
    short={\MakeLowercase{#3}},%          %%   #3: short form, #4: long form
    long={#4},long-plural-form={#4s},#1}}
% An acronym formatting macro
\def\acronym#1{\ac{#1}\acroindex{#1}}     % An acronym
\def\Acronym#1{\Ac{#1}\acroindex{#1}}     %% ... at the beginning of a sentence
\def\Acroshort#1{\acs*{#1}\acroindex{#1}} %%% ... in the unexpanded form
\def\acrofirst#1{\acf{#1}\acroindex{#1}}  %% ... in the initial form 
\def\acropl#1{\acp{#1}\acroindex{#1}}     %% ... in the plural form 
\def\acroplfst#1{\acfp{#1}\acroindex{#1}} %% ... in the initial plural form
\def\acroshort#1{\acs*{#1}\acroindex{#1}} %% ... in the unexpanded form
\def\acrolong#1{\acl{#1}\acroindex{#1}}   %% ... in the expanded form
\def\acroflat#1{\textsc{\MakeLowercase{#1}}} %% ... that wasn't defined
\newcommand{\acroindex}[2][]{%            % Puts an acronym entry into index with
  \index{#2@{\acs*{#2}}#1}}               %% #2 appended to the `\index` argument
\usepackage{etoolbox}
\preto\chapter\acresetall           % Consider acronyms forgotten after a chapter
\preto\backmatter\acuseall          % Do not expand acronyms in the back matter

% Design
%% Layout
\hoffset=-17.4mm % Set up margins of 8mm (+2mm binding correction) inner,
\voffset=-14.4mm %% 8mm outer, 11mm top, 22mm bottom
\setlength{\topmargin}{0pt} %% Do not reserve any space for the top margin
\setlength{\footskip}{0pt}  %% Do not reserve any space for the footer
\setlength{\headheight}{1.25em} %%% as the footer is unused on myheadings pages
\setlength{\headsep}{4mm}
\setlength{\textheight}{%
  \paperheight-\footskip-\headheight-\headsep-\topmargin-33mm}
\setlength{\marginparsep}{4mm} %% ~1cc as per \citework[para.\,50]{kapr99}
\setlength{\textwidth}{100mm} %% Set up a measure that yields ~66 chars per line
\setlength{\marginparwidth}{\paperwidth-\textwidth-\marginparsep-18mm}
\setlength{\oddsidemargin}{2mm}
\setlength{\evensidemargin}{\marginparwidth+\marginparsep}
%%% Running heads and page numbers
\usepackage{fancyhdr}
\fancypagestyle{plain}{%             % The chapter opening page design
  \fancyhf{}%
  \renewcommand{\headrulewidth}{0pt}}%% Hide the rule
\let\oldmaketitle\maketitle
\def\maketitle{%                     %% Switch to the regular design afterwards
  \pagestyle{plain}
  \oldmaketitle
  \cleardoublepage
  \fancyhf{}%
  \renewcommand{\headrulewidth}{0.4pt}%
  \fancyhead[RE]{\slshape\leftmark}%
  \fancyhead[LO]{\slshape\rightmark}%
  \fancyhead[LE,RO]{\thepage}}
%%% Headings
\iffalse % Use the original headings for now
  \usepackage{titlesec}
  \titleformat{\section}[block]{\scshape}{\thesection\quad}{0pt}{}[]
  \titleformat{\subsection}[block]{\itshape}{\thesubsection\quad}{0pt}{}[]
\fi
%%% Index layout
\usepackage[
  indentunit=\parindent,  % The basic unit of index layout as well as ...
  columnsep=\parindent    %% ... the column separator is the paragraph indent
]{idxlayout}

%% Acronyms
\acsetup{
  first-long-format=\itshape,  % The formatting of an expanded acronym
  short-format=\scshape,       %%              ... an unexpanded acronym
  list-caps=true}              % List definitions start with upper-case letters
%% Lists
%%% No vertical spacing and indentation in lists
\usepackage{enumitem}
\setlist{noitemsep,leftmargin=0cm}
%% Code
\setminted{breaklines=true}
\usemintedstyle{default}
%%% Line numbers
%%% @see <http://tex.stackexchange.com/a/132850/70941>
\renewcommand{\theFancyVerbLine}{{\rm\normalsize{\arabic{FancyVerbLine}}}}
%% Hypertext support
\usepackage[%
  colorlinks,
  citecolor=blue
]{hyperref}

% Typesetting
%% General settings
\frenchspacing % No em-spaces after full stops
\usepackage[all]{nowidow} % No clubs and widows
\emergencystretch 1em % Add up to 1em of stretchable glue to overfull lines
\usepackage{marginfix} % Prevent margin notes bleeding into the bottom margin
\AtBeginDocument{\fontsize{10pt}{12pt}} % Set the leading to 12pt
%% Hyphenation definitions
\AtBeginDocument{%
  \input ushyphex
  \input ./hyphenation}
%% Fonts
\usepackage{fontspec}
\usepackage{unicode-math}
\setmainfont[
  Numbers=OldStyle,
  Ligatures=TeX,
  UprightFeatures={    Renderer=Basic },
  BoldFeatures={       Renderer=Basic },
  ItalicFeatures={     Renderer=Basic },
  BoldItalicFeatures={ Renderer=Basic }
]{TeX Gyre Pagella}
\setmonofont[
  Ligatures=TeX,
  Scale=MatchLowercase,
  AutoFakeSlant, % Fake the slant on the typewriter font
  BoldItalicFeatures=FakeSlant
]{Inconsolatazi4}
\setsansfont[Scale=MatchLowercase]{Latin Modern Sans}
%%% Set up TeX Gyre Pagella as the math font with old style digits from the
%%%% base TeX Gyre Pagella font for inline mathematics.
\setmathfont[
  math-style=ISO,
  bold-style=ISO,
  vargreek-shape=TeX
]{texgyrepagella-math.otf}
\setmathfont[
  range=\mathup/{num},
  Numbers=OldStyle
]{TeX Gyre Pagella}
\everydisplay={\setmathfont[range=\mathup/{num}]{texgyrepagella-math.otf}}
%% Protrusion, expansion and small-caps letterspacing
\usepackage[protrusion=true,expansion,tracking=true]{microtype}
